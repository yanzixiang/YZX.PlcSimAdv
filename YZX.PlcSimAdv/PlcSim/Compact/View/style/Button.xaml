<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Style x:Key="ButtonFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2" SnapsToDevicePixels="true"
                     Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                     StrokeDashArray="1 2"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="MainColorDark" Color="White"/>
  <SolidColorBrush x:Key="ForegroundDisabledBrush" Color="DimGray"/>
  <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition/>
        <ColumnDefinition Width="20"/>
      </Grid.ColumnDefinitions>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal"/>
          <VisualState x:Name="MouseOver"/>
          <VisualState x:Name="Pressed"/>
          <VisualState x:Name="Disabled"/>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border x:Name="Border" SnapsToDevicePixels="true" Grid.ColumnSpan="2"
              Background="{DynamicResource BackgroundColorBrush}"
              BorderBrush="{DynamicResource BorderColorBrush}" BorderThickness="1"/>
      <Path x:Name="Arrow" Grid.Column="1" Data="M 0,0 L 4.5,5 9,0 Z" Fill="White" Margin="0,0,1,0"
            HorizontalAlignment="Center" VerticalAlignment="Center"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <Setter TargetName="Border" Value="{DynamicResource BorderColorBrush}" Property="Border.Background"/>
        <Setter TargetName="Border" Value="{DynamicResource BorderColorBrush}" Property="Border.BorderBrush"/>
        <Setter TargetName="Arrow" Property="Shape.Fill" Value="White"/>
      </Trigger>
      <Trigger Property="ToggleButton.IsChecked" Value="true">
        <Setter TargetName="Border" Value="{DynamicResource BackgroundColorBrush}" Property="Border.Background"/>
        <Setter TargetName="Border" Value="{DynamicResource MainColorDark}" Property="Border.BorderBrush"/>
        <Setter TargetName="Arrow" Property="Shape.Fill" Value="White"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter TargetName="Border" Value="{DynamicResource BackgroundColorBrush}" Property="Border.Background"/>
        <Setter TargetName="Border" Value="{StaticResource BorderColorBrush}" Property="Border.BorderBrush"/>
        <Setter Value="{StaticResource ForegroundDisabledBrush}" Property="Control.Foreground"/>
      </Trigger>
      <DataTrigger Value="True"
                   Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}">
        <Setter TargetName="Border" Value="{DynamicResource BackgroundColorBrush}" Property="Border.Background"/>
        <Setter TargetName="Border" Value="{DynamicResource BorderColorBrush}" Property="Border.BorderBrush"/>
        <Setter TargetName="Arrow" Property="Shape.Fill" Value="White"/>
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
    <Border x:Name="PART_ContentHost" Background="{TemplateBinding Control.Background}" Focusable="false"/>
  </ControlTemplate>
  <Style x:Key="newComboStyle" TargetType="{x:Type ComboBox}">
    <Setter Property="ComboBox.IsReadOnly" Value="true"/>
    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="ComboBox.IsEditable" Value="true"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="FrameworkElement.Margin" Value="2"/>
    <Setter Property="FrameworkElement.MinHeight" Value="20"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver"/>
                <VisualState x:Name="Disabled"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ToggleButton x:Name="ToggleButton" Grid.Column="0" ClickMode="Press" Focusable="false"
                          Template="{StaticResource ComboBoxToggleButton}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            <ContentPresenter x:Name="ContentSite" Margin="3,3,20,3" Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                              HorizontalAlignment="Left" IsHitTestVisible="false" VerticalAlignment="Center"/>
            <TextBox x:Name="PART_EditableTextBox" Margin="3,2,20,3" Background="Transparent" Focusable="true"
                     HorizontalAlignment="Left" IsReadOnly="{TemplateBinding ComboBox.IsReadOnly}" Foreground="White"
                     Template="{StaticResource ComboBoxTextBox}" VerticalAlignment="Center" Visibility="Hidden"
                     Style="{x:Null}"/>
            <Popup x:Name="Popup" AllowsTransparency="true" Focusable="false"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" Placement="Bottom" PopupAnimation="Fade">
              <Grid x:Name="DropDown" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" SnapsToDevicePixels="true">
                <Border x:Name="DropDownBorder" Background="{StaticResource BorderColorBrush}"
                        BorderBrush="{StaticResource BorderColorBrush}" BorderThickness="1" CornerRadius="0"/>
                <ScrollViewer Margin="2" SnapsToDevicePixels="true">
                  <StackPanel KeyboardNavigation.DirectionalNavigation="Contained" IsItemsHost="true"
                              TextBlock.Foreground="White"/>
                </ScrollViewer>
              </Grid>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.HasItems" Value="false">
              <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95"/>
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="ComboBox.IsEditable" Value="true">
              <Setter Property="Control.IsTabStop" Value="false"/>
              <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
    <Setter Property="Control.Foreground" Value="White"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid x:Name="ButtonGrid" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                Height="{TemplateBinding FrameworkElement.Height}" Width="{TemplateBinding FrameworkElement.Width}"
                Background="{TemplateBinding Control.Background}" ClipToBounds="true">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ButtonGrid">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Unchecked">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="ButtonBounds" HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch"
                    CornerRadius="0"/>
            <ContentPresenter x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3,1"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="FocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2" SnapsToDevicePixels="true"
                     Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                     StrokeDashArray="1 2"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
  <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
  <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
  <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
  <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
  <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
  <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
  <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
  <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
  <Style x:Key="3dToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
    <Setter Property="Control.Background" Value="#FF6D8797"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource Button.Static.Border}"/>
    <Setter Property="Control.Foreground" Value="White"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Padding" Value="2,3,3,2"/>
    <!--<Setter Property="style:MouseDownHelper.IsEnabled" Value="true"/>-->
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid x:Name="mainGrid" Margin="0,0,0,0">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver"/>
                <VisualState x:Name="MouseDown"/>
                <VisualState x:Name="Disabled"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="uncheckedState" Background="{StaticResource BackgroundColorBrush}"
                  SnapsToDevicePixels="true">
              <Grid.RowDefinitions>
                <RowDefinition Height="3"/>
                <RowDefinition/>
                <RowDefinition Height="3"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="3"/>
              </Grid.ColumnDefinitions>
              <Path Data="M 0,0 L 0,3 3,3 " Grid.Column="0" Grid.Row="0" Fill="{StaticResource BorderColorBrush}"
                    Stretch="None"/>
              <Path Data="M 0,0 L 0,1 1,1 1,0 " Grid.Column="0" Grid.Row="1" Fill="{StaticResource BorderColorBrush}"
                    Stretch="Fill"/>
              <Path Data="M 0,0 L 3,0 0,3 " Grid.Column="0" Grid.Row="2" Fill="{StaticResource BorderColorBrush}"
                    Stretch="None"/>
              <Path Data="M 3,0 L 3,3 0,0 " Grid.Column="0" Grid.Row="0" Fill="{StaticResource BorderColorBrush}"
                    Stretch="None"/>
              <Path Data="M 0,0 L 0,1 1,1 1,0 " Grid.Column="1" Grid.Row="0" Fill="{StaticResource BorderColorBrush}"
                    Stretch="Fill"/>
              <Path Data="M 0,0 L 3,0 0,3 " Grid.Column="2" Grid.Row="0" Fill="{StaticResource BorderColorBrush}"
                    Stretch="None"/>
              <Path Data="M 3,0 L 3,3 0,3 " Grid.Column="2" Grid.Row="0" Fill="{StaticResource BorderColorBrush}"
                    Stretch="None"/>
              <Path Data="M 0,0 L 0,1 1,1 1,0 " Grid.Column="2" Grid.Row="1" Fill="{StaticResource BorderColorBrush}"
                    Stretch="Fill"/>
              <Path Data="M 0,0 L 3,0 3,3 " Grid.Column="2" Grid.Row="2" Fill="{StaticResource BorderColorBrush}"
                    Stretch="None"/>
              <Path Data="M 3,0 L 3,3 0,3 " Grid.Column="0" Grid.Row="2" Fill="#35424A" Stretch="None"/>
              <Path Data="M 0,0 L 0,1 1,1 1,0 " Grid.Column="1" Grid.Row="2" Fill="#35424A" Stretch="Fill"/>
              <Path Data="M 0,0 L 3,3 0,3 " Grid.Column="2" Grid.Row="2" Fill="#35424A" Stretch="None"/>
            </Grid>
            <Grid x:Name="checkedState" Visibility="Collapsed" Background="#44525D" SnapsToDevicePixels="true">
              <Grid.RowDefinitions>
                <RowDefinition Height="3"/>
                <RowDefinition/>
                <RowDefinition Height="3"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="3"/>
              </Grid.ColumnDefinitions>
              <Path Data="M 0,0 L 0,3 3,3 " Grid.Column="0" Grid.Row="0" Fill="{StaticResource BorderColorBrush}"
                    Stretch="None"/>
              <Path Data="M 0,0 L 0,1 1,1 1,0 " Grid.Column="0" Grid.Row="1" Fill="{StaticResource BorderColorBrush}"
                    Stretch="Fill"/>
              <Path Data="M 0,0 L 3,0 0,3 " Grid.Column="0" Grid.Row="2" Fill="{StaticResource BorderColorBrush}"
                    Stretch="None"/>
              <Path Data="M 3,0 L 3,3 0,0 " Grid.Column="0" Grid.Row="0" Fill="#2C373D" Stretch="None"/>
              <Path Data="M 0,0 L 0,1 1,1 1,0 " Grid.Column="1" Grid.Row="0" Fill="#2C373D" Stretch="Fill"/>
              <Path Data="M 0,0 L 3,0 0,3 " Grid.Column="2" Grid.Row="0" Fill="#2C373D" Stretch="None"/>
              <Path Data="M 3,0 L 3,3 0,3 " Grid.Column="2" Grid.Row="0" Fill="{StaticResource BorderColorBrush}"
                    Stretch="None"/>
              <Path Data="M 0,0 L 0,1 1,1 1,0 " Grid.Column="2" Grid.Row="1" Fill="{StaticResource BorderColorBrush}"
                    Stretch="Fill"/>
              <Path Data="M 0,0 L 3,0 3,3 " Grid.Column="2" Grid.Row="2" Fill="{StaticResource BorderColorBrush}"
                    Stretch="None"/>
              <Path Data="M 3,0 L 3,3 0,3 " Grid.Column="0" Grid.Row="2" Fill="#99AFC2" Stretch="None"/>
              <Path Data="M 0,0 L 0,1 1,1 1,0 " Grid.Column="1" Grid.Row="2" Fill="#99AFC2" Stretch="Fill"/>
              <Path Data="M 0,0 L 3,3 0,3 " Grid.Column="2" Grid.Row="2" Fill="#99AFC2" Stretch="None"/>
            </Grid>
            <ContentPresenter x:Name="contentPresenter" Focusable="false"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="0,0,0,0"
                              RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="uncheckedState" Property="Panel.Background" Value="LightSlateGray"/>
              <Setter TargetName="checkedState" Property="Panel.Background" Value="LightSlateGray"/>
            </Trigger>
            <!--<Trigger Property="style:MouseDownHelper.IsMouseLeftButtonDown" Value="true">
              <Setter TargetName="uncheckedState" Property="Panel.Background" Value="LightSlateGray"/>
              <Setter TargetName="checkedState" Property="Panel.Background" Value="LightSlateGray"/>
            </Trigger>-->
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="uncheckedState" Property="Panel.Background" Value="LightSlateGray"/>
              <Setter TargetName="checkedState" Property="Panel.Background" Value="LightSlateGray"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="checkedState" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="uncheckedState" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="mainGrid" Property="FrameworkElement.Margin" Value="0,0,0,0"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>